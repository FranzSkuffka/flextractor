// Generated by CoffeeScript 1.10.0
(function() {
  var Entity, Knwl, knwlEntities, knwlSync;

  Knwl = require('knwl.js');

  knwlSync = new Knwl('german');

  Entity = require('./Entity');

  knwlSync.register('money', require('../../../node_modules/knwl.js/experimental_plugins/money'));

  knwlSync.register('ratios', require('../../../node_modules/knwl.js/experimental_plugins/ratios'));

  knwlEntities = function(text) {
    return new Promise(function(resolve) {
      var email, i, j, k, l, len, len1, len2, len3, meta, money, phone, ratio, ref, ref1, ref2, ref3, results;
      knwlSync.init(text);
      results = [];
      ref = knwlSync.get('money');
      for (i = 0, len = ref.length; i < len; i++) {
        money = ref[i];
        results.push(new Entity('financialValue', money.value));
      }
      ref1 = knwlSync.get('ratios');
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        ratio = ref1[j];
        results.push(new Entity('probability', ratio.percentileValue));
      }
      ref2 = knwlSync.get('phones');
      for (k = 0, len2 = ref2.length; k < len2; k++) {
        phone = ref2[k];
        results.push(new Entity('phoneNumber', phone.phone));
      }
      ref3 = knwlSync.get('emails');
      for (l = 0, len3 = ref3.length; l < len3; l++) {
        email = ref3[l];
        if (email.preview != null) {
          meta = {
            preview: email.preview
          };
        }
        results.push(new Entity('emailAddress', email.address, meta));
      }
      return resolve(results);
    });
  };

  module.exports = knwlEntities;

}).call(this);
